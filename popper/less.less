
img {
    position: absolute;
    width: 100px;
    top: 0;
    left: 0;
    animation-name: loader1;
    animation-duration:5s;
    animation-timing-function:steps(1,end);
    animation-iteration-count: 1;
    /* animation-direction */
    /* animation-fill-mode	 */
    animation-play-state: running;
    animation-fill-mode: forwards;
}
// ==================== 

//匀速版本。
// .generickeyframe(@name;@framelist;@time){ 
//     @length:length(@framelist) * @time ;
//     @keyframes @name{ 
//     .loop-framelist(@index) when (@index <= @length){ 
//         @framepos: (@index - 1) * 100/@length * 1%; 
//         @cuutent: mod(@index, length(@framelist)) + 1;
//         @{framepos}{ 
//             @props: extract(@framelist, @cuutent); 
//             @props(); 
//             } 
//         .loop-framelist(@index+1); 
//     } 
//     .loop-framelist(1); 
//     } 
// } 
// .generickeyframe(loader1; 
//     {top: 0; left: 0px;},
//     {top: 0; left: 100px;},
//     {top: 0; left: 200px;},
//     {top: 100px; left: 200px;},
//     {top: 200px; left: 200px;},
//     {top: 200px; left: 100px;},
//     {top: 200px; left: 0px;},
//     {top: 100px; left: 0px;};
//     4
// ); 
// =========================

.generickeyframe(@name;@framelist;@time;@position:0){ 
    @listlength:length(@framelist) ;
    @length:length(@framelist) * @time ;
    @alllength: length(@framelist) * @time + @position ;
    .loop-framelist(@index) when (@index <= @alllength){ 
        .mixin (@index) when (@index<=@listlength){
            @framepos: 20/sqrt(@listlength) * sqrt(@index) * 1%; 
            @current: mod(@index, length(@framelist)) + 1;
            @{framepos}{ 
                @props: extract(@framelist, @current); 
                @props(); 
            } 
        }
        .mixin (@index) when (@index<=(@alllength - @listlength)) and (@index>@listlength) {
            @framepos: 20 + 30 /(@alllength - 2*@listlength) * (@index - @listlength) * 1%; 
            @cuutent: mod(@index, length(@framelist)) + 1;
            @{framepos}{ 
                @props: extract(@framelist, @cuutent); 
                @props(); 
            } 
        }
        .mixin (@index) when (@index>(@alllength - @listlength)){
            @framepos: 50 + 50 /pow((@listlength),2) * pow((@index - (@alllength - @listlength)),2)  * 1%; 
            @cuutent: mod(@index, length(@framelist)) + 1;
            @{framepos}{ 
                @props: extract(@framelist, @cuutent); 
                @props(); 
            } 
        }
        .mixin(@index);
        .loop-framelist(@index+1); 
    } 
    @keyframes @name{ 
        .loop-framelist(0); 
    } 
    @-moz-keyframes  @name{ 
        .loop-framelist(0); 
    } 
    @-webkit-keyframes  @name{ 
        .loop-framelist(0); 
    } 
    @-o-keyframes  @name{ 
        .loop-framelist(0); 
    } 
}
// {top: 0; left: 0px;},
// {top: 0; left: 100px;},
// {top: 0; left: 200px;},
// {top: 100px; left: 200px;},
// {top: 200px; left: 200px;},
// {top: 200px; left: 100px;},
// {top: 200px; left: 0px;},
// {top: 100px; left: 0px;};
@position1:{top: 0; left: 0px;};
@position2:{top: 0; left: 100px;};
@position3:{top: 0; left: 200px;};
@position4:{top: 100px; left: 200px;};
@position5:{top: 200px; left: 200px;};
@position6:{top: 200px; left: 100px;};
@position7:{top: 200px; left: 0px;};
@position8:{top: 100px; left: 0px;};
@position:@position1,@position2,@position3,@position4,@position5,@position6,@position7,@position8;
.generickeyframe(loader1; 
    @position;
    6;
    3
); 